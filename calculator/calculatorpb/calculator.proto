syntax = "proto3";

package calculator;
option go_package="calculator/calculatorpb";

message SumRequest{
  int32 first_number = 1;
  int32 second_number = 2;
}
message SumResponse{
  int32 sum_result = 1;
}

message PrimeNumberDecompositionRequest{
  int64 number =1;
}

message PrimeNumberDecompositionResponse{
  int64 prime_factor = 1;
}

message ComputeAverageRequest{
  int32 number = 1;
}

message ComputeAverageResponse{
  double average = 1;
}

message FindMaximumRequest{
  int32 number =1;
}

message FindMaximumResponse{
  int32 maximum =1;
}

message SquareRootRequest{
  int32 number =1;
}

message SquareRootResponse{
  double number_root =1;
}

service CalculatorService{
  //Unary
  rpc Sum(SumRequest) returns (SumResponse) {};

  //Server stream
  rpc PrimeNumberDecomposition(PrimeNumberDecompositionRequest) returns (stream PrimeNumberDecompositionResponse) {};

  //Client stream
  rpc ComputeAverage(stream ComputeAverageRequest) returns (ComputeAverageResponse) {};

  // BiDi stream
  rpc FindMaximum(stream FindMaximumRequest) returns (stream FindMaximumResponse) {};

  // Unary + custom err
  // this RPC will throw an exception if the sent number is negative
  // the error being sent is of type INVALID_ARGUMENT
  rpc SquareRoot(SquareRootRequest) returns (SquareRootResponse) {} ;

}
